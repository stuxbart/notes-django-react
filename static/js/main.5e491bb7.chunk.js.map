{"version":3,"sources":["apis/api.js","actions/messagesActions.js","actions/types.js","actions/notesActions.js","actions/modalActions.js","components/LoadingSpinner.js","components/auth/Login.js","actions/authActions.js","components/Header.js","components/notes/NoteCard.js","components/common/Paginator.js","components/notes/DeleteNoteModal.js","components/notes/NotesHome.js","components/MessageBar.js","components/notes/NoteDetail.js","components/notes/NoteCreate.js","components/auth/Register.js","components/common/AuthenticatedOnlyRoute.js","components/App.js","reducers/notesReducer.js","reducers/authReducer.js","reducers/modalReducer.js","reducers/index.js","reducers/selectNoteReducer.js","reducers/messageReducer.js","reducers/loadingReducer.js","index.js"],"names":["axios","create","baseURL","setError","message","type","payload","setSuccessMessage","fetchNotes","dispatch","getState","a","page","notes","token","auth","headers","api","get","then","response","data","catch","error","detail","fetchNote","slug","select","console","log","res","startEditNote","markDone","done","patch","selectNote","id","objects","changePage","parseInt","showDeleteModal","redirect","LoadingSpinner","className","style","height","role","width","Login","state","username","password","rememberMe","onButtonClick","event","preventDefault","props","login","this","isAuthenticated","to","loading","placeholder","required","autoFocus","onChange","e","setState","target","value","onClick","React","Component","connect","remember","post","user","localStorage","setItem","Header","logout","onLogoutButtonClick","aria-label","data-toggle","data-target","aria-controls","aria-expanded","renderRightPanel","NoteCard","onSelect","note","history","push","onEditButtonClick","onMarkDoneButtonClick","onDeleteNoteButtonClick","onDelete","buttonColor","color","buttonTextColor","includes","createdDate","Date","created","title","length","slice","body","toLocaleString","key","boxShadow","fontSize","important","withRouter","Paginator","count","lastPage","Math","trunc","tabIndex","aria-disabled","aria-current","DeleteNoteModal","onHide","hideDeleteModal","deleteNote","redirectTo","Modal","show","closeButton","Title","Body","Footer","Button","variant","modals","deleteModal","selectedNote","delete","NotesHome","showDeleteNoteModal","URLSearchParams","location","search","map","index","top","renderList","Object","values","sort","b","dateA","colors","info","success","clearMessage","NoteDetail","pathname","substr","borderBottom","renderDone","updated","NoteCreate","colorOptions","renderTextInput","input","label","meta","validClassName","touched","autoComplete","renderError","renderTextArea","renderCheckBoxInput","checked","renderColorSelector","renderedOptions","onSubmit","formValues","edit","editNote","createNote","stopEditNote","handleSubmit","Field","name","component","initialValues","enableReinitialize","reduxForm","form","validate","errors","Register","email","password2","register","result","rest","render","isLoading","App","loadUser","path","exact","initialState","getItem","combineReducers","action","_","mapKeys","results","omit","removeItem","formReducer","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.5e491bb7.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: '',\r\n})","import {\r\n    ERROR_MESSAGE,\r\n    SUCCESS_MESSAGE,\r\n    CLEAR_MESSAGE\r\n} from './types';\r\n\r\nexport const setError = (message) => {\r\n    return {\r\n        type: ERROR_MESSAGE,\r\n        payload: message\r\n    };\r\n}\r\n\r\nexport const setSuccessMessage = message => {\r\n    return {\r\n        type: SUCCESS_MESSAGE,\r\n        payload: message\r\n    }\r\n}\r\n\r\nexport const clearMessage = () => {\r\n    return {\r\n        type: CLEAR_MESSAGE\r\n    };\r\n}","export const START_LOADING = 'START_LOADING'\r\nexport const STOP_LOADING = 'STOP_LOADING'\r\n\r\nexport const FETCH_NOTES = 'FETCH_NOTES'\r\nexport const FETCH_NOTE = 'FETCH_NOTE'\r\nexport const EDIT_NOTE = 'EDIT_NOTE'\r\nexport const START_EDIT_NOTE = 'START_EDIT_NOTE'\r\nexport const STOP_EDIT_NOTE = 'STOP_EDIT_NOTE'\r\nexport const DELETE_NOTE = 'DELETE_NOTE'\r\nexport const SELECT_NOTE = 'SELECT_NOTE'\r\nexport const DESELECT_NOTE = 'DESELECT_NOTE'\r\n\r\nexport const CHANGE_PAGE = 'CHANGE_PAGE'\r\n\r\nexport const ERROR_MESSAGE = 'ERROR_MESSAGE'\r\nexport const SUCCESS_MESSAGE = 'SUCCESS_MESSAGE'\r\nexport const INFO_MESSAGE = 'INFO_MESSAGE'\r\nexport const CLEAR_MESSAGE = 'CLEAR_MESSAGE'\r\n\r\nexport const LOGIN = 'LOGIN'\r\nexport const LOGOUT = 'LOGOUT'\r\nexport const AUTH_ERROR = 'AUTH_ERROR'\r\nexport const LOADING_USER = 'LOADING_USER'\r\nexport const USER_LOADED = 'USER_LOADED'\r\n\r\nexport const SHOW_DELETE_MODAL = 'SHOW_DELETE_MODAL'\r\nexport const HIDE_DELETE_MODAL = 'HIDE_DELETE_MODAL'","import api from '../apis/api';\r\nimport {\r\n    setError,\r\n    setSuccessMessage\r\n} from './messagesActions';\r\nimport {\r\n    START_LOADING,\r\n    STOP_LOADING,\r\n    FETCH_NOTES,\r\n    FETCH_NOTE,\r\n    EDIT_NOTE,\r\n    DELETE_NOTE,\r\n    SELECT_NOTE,\r\n    DESELECT_NOTE,\r\n    START_EDIT_NOTE,\r\n    STOP_EDIT_NOTE,\r\n    CHANGE_PAGE\r\n\r\n} from './types'\r\n\r\n\r\nexport const fetchNotes = () => async (dispatch, getState) => {\r\n    dispatch({ type: START_LOADING });\r\n    const page = getState().notes.page;\r\n    const token = getState().auth.token;\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n    };\r\n\r\n    const response = await api.get(`/api/notes/?page=${page}`,{ headers: headers })\r\n    .then((response) => {\r\n        dispatch({ type: FETCH_NOTES, payload: response.data });\r\n        return true;\r\n    })\r\n    .catch((error) => {\r\n        if( error.response ){\r\n            dispatch(setError(error.response.data.detail));\r\n        }\r\n        return false;\r\n    }); \r\n    dispatch({ type: STOP_LOADING });\r\n    return response;\r\n}\r\n\r\nexport const fetchNote = (slug, select=true) => async (dispatch, getState) => {\r\n    dispatch({ type: START_LOADING });\r\n    const token = getState().auth.token\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n    }\r\n\r\n    const res = await api.get(`/api/notes/${slug}/`,{headers:headers})\r\n    .then(response => {\r\n        dispatch({\r\n            type: FETCH_NOTE,\r\n            payload: response.data\r\n        });\r\n        if (select) {\r\n            dispatch({\r\n                type: SELECT_NOTE,\r\n                payload: response.data\r\n            });\r\n        }\r\n        return true;\r\n    })\r\n    .catch(error => {\r\n        console.log(error);\r\n        return false;\r\n    })\r\n    dispatch({ type: STOP_LOADING });\r\n    return res;\r\n}\r\n\r\nexport const startEditNote = () => {\r\n    return {\r\n        type: START_EDIT_NOTE\r\n    }\r\n}\r\n\r\nexport const stopEditNote = () => {\r\n    return {\r\n        type: STOP_EDIT_NOTE\r\n    }\r\n}\r\n\r\nexport const editNote = (note, data) => async (dispatch, getState) => {\r\n    const token = getState().auth.token;\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n    }\r\n\r\n    const res = await api.patch(`/api/notes/${note.slug}/`, data, {headers:headers})\r\n    .then(response => {\r\n        dispatch({ type: DESELECT_NOTE });\r\n        dispatch(setSuccessMessage(\"Note has been edited\"));\r\n        dispatch({ type: EDIT_NOTE, payload: response.data })\r\n        return true;\r\n    })\r\n    .catch(error => {\r\n        console.log(error);\r\n        return false;\r\n    })\r\n    return res;\r\n}\r\n\r\nexport const deleteNote = (id) => async (dispatch, getState) => {\r\n    const token = getState().auth.token;\r\n    const note = getState().notes.objects[id];\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n    }\r\n\r\n    await api.delete(`/api/notes/${note.slug}/`,{headers:headers})\r\n    .then(response => {\r\n        dispatch({ type: DESELECT_NOTE });\r\n        dispatch(setSuccessMessage(\"Note has been deleted\"));\r\n        dispatch({ type: DELETE_NOTE, payload: id })\r\n    })\r\n    .catch(error => {\r\n        console.log(error);\r\n    })\r\n}\r\n\r\nexport const markDone = (slug, done) => async (dispatch, getState) => {\r\n    const token = getState().auth.token\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n    }\r\n\r\n    await api.patch(`/api/notes/${slug}/mark_done/`, {done:done},{headers:headers})\r\n    .then(response => {\r\n        dispatch({\r\n            type: FETCH_NOTE,\r\n            payload: response.data\r\n        });\r\n    })\r\n    .catch(error => {\r\n        console.log(error);\r\n    })\r\n}\r\n\r\nexport const createNote = (data) => async (dispatch, getState) => {\r\n    const token = getState().auth.token\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n    }\r\n    const res = await api.post(`/api/notes/`, data,{headers:headers})\r\n    .then(response => {\r\n        dispatch(setSuccessMessage(\"Note has been created\"));\r\n        return true;\r\n    })\r\n    .catch(error => {\r\n        dispatch(setError(\"Server error, unable to create note\"));\r\n        return false;\r\n    }) \r\n    return res;\r\n}\r\n\r\nexport const selectNote = (id) => (dispatch, getState) => {\r\n    const note = getState().notes.objects[id];\r\n\r\n    dispatch({\r\n        type: SELECT_NOTE,\r\n        payload: note\r\n    });\r\n}\r\n\r\nexport const changePage = (page) => {\r\n    return {\r\n        type: CHANGE_PAGE,\r\n        payload: parseInt(page)\r\n    }\r\n}","import {\r\n    SHOW_DELETE_MODAL,\r\n    HIDE_DELETE_MODAL\r\n} from './types';\r\n\r\nexport const showDeleteModal = (redirect=null) => {\r\n    return {\r\n        type: SHOW_DELETE_MODAL,\r\n        payload: redirect\r\n    }\r\n}\r\n\r\nexport const hideDeleteModal = () => {\r\n    return {\r\n        type: HIDE_DELETE_MODAL\r\n    }\r\n}","import React from 'react';\r\n\r\nconst LoadingSpinner = () => {\r\n    return (\r\n        <div className=\"row text-center\" style={{ height: \"85vh\"}}>\r\n            <div className=\"col-sm-12 my-auto\">\r\n                <div className=\"spinner-grow text-primary\" role=\"status\" style={{width: \"7rem\", height: \"7rem\"}}>\r\n            <span className=\"sr-only\">Loading...</span>\r\n        </div></div></div>\r\n    );\r\n};\r\n\r\nexport default LoadingSpinner;","import './form.css';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect, Link } from \"react-router-dom\";\r\n\r\nimport { fetchNotes, login } from '../../actions';\r\nimport LoadingSpinner from '../LoadingSpinner';\r\n\r\nclass Login extends React.Component {\r\n    state = { \r\n        username: '', \r\n        password: '',\r\n        rememberMe: false\r\n    }\r\n    \r\n    onButtonClick = (event) => {\r\n        event.preventDefault();\r\n        this.props.login(this.state.username, this.state.password, this.state.rememberMe);\r\n\r\n    }\r\n    render() {\r\n        if (this.props.auth.isAuthenticated) {\r\n            return <Redirect to=\"/\" />\r\n        } else if (this.props.loading) {\r\n            return <LoadingSpinner />\r\n        } else {\r\n            return (\r\n                <div className=\"col-md-6 m-auto\">\r\n                    <div className=\"card card-body mt-4\">\r\n                        <form className=\"form\">\r\n                            <h1 className=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\r\n                            <div className=\"form-group\">\r\n                                <label>Username</label>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    id=\"inputUsername\" \r\n                                    className=\"form-control\" \r\n                                    placeholder=\"Username\" \r\n                                    required=\"\" \r\n                                    autoFocus=\"\"\r\n                                    onChange={e => this.setState({ username: e.target.value })}\r\n                                    value={this.state.username}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Password</label>\r\n                                <input \r\n                                    type=\"password\" \r\n                                    id=\"inputPassword\"\r\n                                    className=\"form-control\" \r\n                                    placeholder=\"Password\" \r\n                                    required=\"\"\r\n                                    onChange={e => this.setState({ password: e.target.value })}\r\n                                    value={this.state.password}\r\n                                />\r\n                            </div>\r\n                            \r\n                            <div className=\"form-group\">\r\n                                <div className=\"checkbox mb-3\">\r\n                                    <label>\r\n                                    <input\r\n                                        type=\"checkbox\" \r\n                                        value={this.state.rememberMe} \r\n                                        onChange={e => this.setState({ rememberMe: e.target.value })}\r\n                                    /> \r\n                                    &nbsp;Remember me\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <button \r\n                                className=\"btn btn-lg btn-primary btn-block\"\r\n                                onClick={e => this.onButtonClick(e)}\r\n                            >\r\n                                Sign in\r\n                            </button>\r\n\r\n                            <p className=\"mt-5 mb-3 text-muted\">\r\n                                Don't have account? &nbsp;\r\n                                <Link to=\"/auth/register\">Register</Link>\r\n                            </p>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { auth: state.auth, loading:state.loading };\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchNotes, login })(Login);","import api from '../apis/api';\r\nimport {\r\n    setError,\r\n    setSuccessMessage\r\n} from './messagesActions';\r\n\r\nimport {\r\n    START_LOADING,\r\n    STOP_LOADING,\r\n    LOGIN,\r\n    AUTH_ERROR,\r\n    LOGOUT,\r\n    USER_LOADED,\r\n    LOADING_USER\r\n} from './types'\r\n\r\nexport const register = (username, email, password) => async dispatch => {\r\n    dispatch({ type: START_LOADING });\r\n    const result = await api.post('/api/auth/register', { username:username, email:email, password:password})\r\n    .then((response) => {\r\n        dispatch(setSuccessMessage(\"Account has been created\"));\r\n        return true;\r\n    })\r\n    .catch((error) => {\r\n        if( error.response ){\r\n            dispatch(setError(\"Register error\"));\r\n            return false;\r\n        }\r\n    });\r\n    dispatch({ type: STOP_LOADING });\r\n    return result;\r\n}\r\n\r\nexport const login = (username, password, remember=false) => async dispatch => {\r\n    dispatch({ type: START_LOADING });\r\n    await api.post('/api/auth/login', { username:username, password:password})\r\n    .then((response) => {\r\n        dispatch({ \r\n            type: LOGIN, \r\n            payload: { \r\n                token: response.data.token, \r\n                user: response.data.user\r\n            }\r\n        });\r\n        if (remember) {\r\n            localStorage.setItem('token', response.data.token);\r\n        }\r\n    })\r\n    .catch((error) => {\r\n        if( error.response ){\r\n            dispatch({\r\n                type: AUTH_ERROR\r\n            })\r\n            dispatch(setError(\"Unable to login\"));\r\n        }\r\n    }); \r\n    dispatch({ type: STOP_LOADING });\r\n}\r\n\r\nexport const logout = () => async (dispatch, getState) => {\r\n    const token = getState().auth.token\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n    }\r\n\r\n    await api.post('/api/auth/logout',{}, { headers: headers })\r\n    .then(() => dispatch({ type: LOGOUT }))\r\n    .catch(() => dispatch(setError(\"Unable to logout\")));\r\n\r\n}\r\n\r\nexport const loadUser = () => (dispatch, getState) => {\r\n    dispatch({\r\n        type: LOADING_USER\r\n    });\r\n\r\n    const token = getState().auth.token\r\n    const headers = {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Token ${token}`\r\n    }\r\n    api.get('/api/auth/user', { headers:headers })\r\n    .then(response => {\r\n        dispatch({\r\n            type: USER_LOADED,\r\n            payload: response.data\r\n        });\r\n    })\r\n    .catch(error => {\r\n        if (token){\r\n            dispatch(setError(\"Auth error\"));\r\n        }\r\n        \r\n        dispatch({\r\n            type: AUTH_ERROR\r\n        });\r\n    });\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../actions';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Header extends React.Component {\r\n    onLogoutButtonClick() {\r\n        this.props.logout();\r\n    }\r\n    renderRightPanel() {\r\n        if (this.props.isAuthenticated) {\r\n            return (\r\n                <>\r\n                    <span className=\"navbar-text text-white mx-3\">\r\n                        {this.props.user.username}\r\n                    </span>\r\n                    <button onClick={e => this.onLogoutButtonClick()} className=\"btn btn-primary text-white\">Logout</button>\r\n                </>\r\n            );\r\n        }\r\n        return (\r\n            <div>\r\n                <Link to='/auth/register' className=\"btn btn-primary text-white\">Register</Link>\r\n                <Link to='/auth/login' className=\"btn btn-primary text-white ml-2\">Login</Link>\r\n            </div>\r\n        );\r\n    }\r\n    renderSearchBar() {\r\n        return (\r\n            <div className=\"ml-5 mr-auto\" style={{ width:\"100%\"}}>\r\n                <form className=\"form-inline my-2 my-lg-0\">\r\n                    <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" style={{ width:\"50%\" }}/>\r\n                    <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <Link className=\"navbar-brand\" to=\"/\">Notes</Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item active\">\r\n                            <Link className=\"nav-link\" to=\"/\">Home <span className=\"sr-only\">(current)</span></Link>\r\n                        </li>\r\n                        {this.props.isAuthenticated ?\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"btn btn-success text-white mx-2\" to=\"/create\">New</Link>\r\n                        </li>\r\n                        :''}\r\n                    </ul>\r\n                    {/* {this.props.isAuthenticated ? this.renderSearchBar() :''} */}\r\n                    {this.renderRightPanel()}\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    if (state.auth.isAuthenticated) {\r\n        return {\r\n            isAuthenticated: state.auth.isAuthenticated,\r\n            user: state.auth.user\r\n        };\r\n    }\r\n    return {\r\n        isAuthenticated: state.auth.isAuthenticated\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, { logout })(Header);","import React from 'react';\r\nimport { markDone, startEditNote, selectNote } from '../../actions';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass NoteCard extends React.Component {\r\n    onClick = event => {\r\n        event.preventDefault();\r\n        this.props.onSelect(this.props.note.id);\r\n        this.props.history.push(`/notes/${this.props.note.slug}`);\r\n    }\r\n\r\n    onEditButtonClick = event => {\r\n        event.preventDefault();\r\n        this.props.startEditNote();\r\n        this.props.selectNote(this.props.note.id);\r\n        this.props.history.push(`/edit/${this.props.note.slug}`);\r\n    }\r\n\r\n    onMarkDoneButtonClick = event => {\r\n        event.preventDefault();\r\n        this.props.markDone(this.props.note.slug, !this.props.note.done);\r\n    }\r\n\r\n    onDeleteNoteButtonClick = event => {\r\n        this.props.onDelete(this.props.note);\r\n    }\r\n    \r\n    render(){\r\n        const buttonColor = this.props.note.done ? 'lightgrey': this.props.note.color || 'light';\r\n        const buttonTextColor = ['light', 'lightgrey'].includes(buttonColor) ? 'text-reset': 'text-white';\r\n        const createdDate = new Date(this.props.note.created)\r\n        const title = this.props.note.title.length < 30? this.props.note.title : this.props.note.title.slice(0, 30) + \"...\";\r\n        const body = this.props.note.body.length < 54? this.props.note.body : this.props.note.body.slice(0, 50) + \"...\";\r\n        console.log(createdDate.toLocaleString());\r\n        return (\r\n            <div key={this.props.note.id} className={`col-md-6 col-12 ${this.props.note.done ? 'text-muted':''}`}>\r\n                <div className=\"card my-3\">\r\n                    <div className={`card-header bg-${this.props.note.done ? 'lightgrey' : this.props.note.color || 'light'} `}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n\r\n                                <button \r\n                                    id={`done-${ this.props.note.id }`} \r\n                                    className={`mark-done btn btn-${buttonColor} ${buttonTextColor}`}\r\n                                    style={{ boxShadow:\"none\"}}\r\n                                    onClick={this.onMarkDoneButtonClick}\r\n                                >\r\n                                    <i className=\"fas fa-check\"></i>\r\n                                </button>\r\n\r\n                                <button\r\n                                    className={`btn btn-${buttonColor} ${buttonTextColor}`} \r\n                                    style={{ boxShadow:\"none\"}}\r\n                                    onClick={this.onEditButtonClick}\r\n                                >\r\n                                    <i className=\"far fa-edit\"></i>\r\n                                </button>\r\n\r\n                            </div>\r\n                            \r\n                            <div className=\"col text-right\">\r\n\r\n                                <button\r\n                                    className={`btn btn-${buttonColor} ${buttonTextColor}`} \r\n                                    style={{ boxShadow:\"none\"}}\r\n                                    onClick={this.onDeleteNoteButtonClick}\r\n                                >\r\n                                    <i className=\"fas fa-times\"></i>\r\n                                </button>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <h3 className=\"card-title\">{ title }</h3>\r\n                        <h6 className=\"card-subtitle mb-2 text-muted\">Created: { createdDate.toLocaleString() }</h6>\r\n                        <p className=\"card-text\">{ body }</p>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6\">\r\n                                <button onClick={this.onClick} className={`btn ${this.props.note.done ? 'btn-secondary': 'btn-info'} mr-auto`}>More </button>\r\n                            </div>                                \r\n                            <div className=\"col-6 text-right\" style={{fontSize: \"25px\"}}>\r\n                                { this.props.note.done ?<i className=\"fas fa-check mr-3 text-success\"></i> :''}\r\n                                { this.props.note.important? <i className=\"fas fa-exclamation mr-3 text-warning\"></i>: ''}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default connect(null,{markDone, startEditNote, selectNote})(withRouter(NoteCard));","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { changePage,fetchNotes } from '../../actions';\r\n\r\nclass Paginator extends React.Component {\r\n    onClick = (page) => {\r\n        this.props.changePage(page);\r\n        this.props.fetchNotes();\r\n        this.props.history.push(`/?page=${page}`);\r\n    }\r\n    render() {\r\n        const { page, count } = this.props;\r\n        if (count<11){\r\n            return null;\r\n        }\r\n        const lastPage = Math.trunc(count / 10) + 1;\r\n        return (\r\n            <nav>\r\n                <ul className=\"pagination justify-content-center\">\r\n\r\n                    <li className={`page-item ${page===1?'disabled':''}`}>\r\n                        <button\r\n                            onClick={e => this.onClick(page-1)}\r\n                            className=\"page-link\" \r\n                            tabIndex=\"-1\" \r\n                            aria-disabled={page===1?'true':'false'}\r\n                        >\r\n                            Previous\r\n                        </button>\r\n                    </li>\r\n\r\n                    {page>2 ? \r\n                    <li className=\"page-item\">\r\n                        <button \r\n                            className=\"page-link\" \r\n                            onClick={e => this.onClick(page-2)}\r\n                        >\r\n                            {page-2}\r\n                        </button>\r\n                    </li>\r\n                    : ''}\r\n\r\n                    {page!==1 ? \r\n                    <li className=\"page-item\">\r\n                        <button \r\n                            className=\"page-link\" \r\n                            onClick={e => this.onClick(page-1)}\r\n                        >\r\n                            {page-1}\r\n                        </button>\r\n                    </li>\r\n                    : ''}\r\n\r\n                    <li className=\"page-item active\" aria-current=\"page\">\r\n                        <button \r\n                            className=\"page-link\"\r\n                        >\r\n                            {page}<span className=\"sr-only\">(current)</span>\r\n                        </button>\r\n                    </li>\r\n\r\n                    {page!==lastPage ? \r\n                    <li className=\"page-item\">\r\n                        <button \r\n                            className=\"page-link\"\r\n                            onClick={e => this.onClick(page+1)}\r\n                        >\r\n                            {page+1}\r\n                        </button>\r\n                    </li>\r\n                    : ''}\r\n\r\n                    {page+1<lastPage ? \r\n                    <li className=\"page-item\">\r\n                        <button \r\n                            className=\"page-link\"\r\n                            onClick={e => this.onClick(page+2)}\r\n                        >\r\n                            {page+2}\r\n                        </button>\r\n                    </li>\r\n                    : ''}\r\n                    \r\n                    <li className={`page-item ${page===lastPage?'disabled':''}`}>\r\n                        <button \r\n                            onClick={e => this.onClick(page+1)} \r\n                            className=\"page-link\" \r\n                            tabIndex=\"-1\" \r\n                            aria-disabled={page===lastPage?'true':'false'}\r\n                        >\r\n                            Next\r\n                        </button>\r\n                    </li>\r\n\r\n                </ul>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        page: state.notes.page,\r\n        count: state.notes.count\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {changePage, fetchNotes})(withRouter(Paginator));","import React from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { hideDeleteModal, deleteNote } from '../../actions';\r\n\r\nclass DeleteNoteModal extends React.Component {\r\n    onHide = () => {\r\n        this.props.hideDeleteModal();\r\n    }\r\n\r\n    onDelete = () => {\r\n        this.props.deleteNote(this.props.note.id);\r\n        if (this.props.redirectTo) {\r\n            this.props.history.push(this.props.redirectTo);\r\n        }\r\n        this.props.hideDeleteModal();        \r\n    }\r\n\r\n    render() {\r\n        if (this.props.note) {\r\n                return (\r\n                <Modal show={this.props.show} onHide={this.onHide}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Delete Note</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>Are you sure you want to delete \"<b>{this.props.note.title}</b>\" ?</Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={this.onHide}>\r\n                            Cancel\r\n                        </Button>\r\n                        <Button variant=\"danger\" onClick={this.onDelete}>\r\n                            Delete\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            );\r\n        }\r\n       return <div />;\r\n    }\r\n}\r\n    \r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        show: state.modals.deleteModal.show,\r\n        redirectTo: state.modals.deleteModal.redirectTo,\r\n        note: state.selectedNote\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { hideDeleteModal,deleteNote })(withRouter(DeleteNoteModal));","import './NotesHome.css';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchNotes, selectNote, changePage, showDeleteModal } from '../../actions';\r\nimport NoteCard from './NoteCard';\r\nimport LoadingSpinner from '../LoadingSpinner';\r\nimport Paginator from '../common/Paginator';\r\nimport DeleteNoteModal from './DeleteNoteModal';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass NotesHome extends React.Component {\r\n    componentDidMount(){\r\n        const page = new URLSearchParams(this.props.location.search).get(\"page\") || this.props.page;\r\n        this.props.changePage(page);\r\n        this.props.fetchNotes()\r\n        .then(res => {\r\n            if (!res) {\r\n                this.props.history.push(`/?page=${1}`);\r\n                this.props.changePage(1);\r\n                this.props.fetchNotes();\r\n            }\r\n        });\r\n    }\r\n\r\n    selectNote = (id) => {\r\n        this.props.selectNote(id);\r\n    }\r\n\r\n    showDeleteNoteModal = (note) => {\r\n        this.props.selectNote(note.id);\r\n        this.props.showDeleteModal();\r\n    }\r\n\r\n    renderList() {\r\n        if (this.props.notes.length>0){\r\n            return this.props.notes.map((note, index) => {\r\n                return <NoteCard \r\n                        key={note.id} \r\n                        note={note} \r\n                        onSelect={this.selectNote} \r\n                        onDelete={this.showDeleteNoteModal}\r\n                        />\r\n            });\r\n        }\r\n        return (\r\n            <div className=\"col text-center\" style={{ top: \"40vh\"}}>\r\n                You don't have any notes. <Link to=\"/create\" className=\"text-success\">Create one</Link>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render(){\r\n        if (this.props.loading) {\r\n            return <LoadingSpinner />\r\n        }\r\n        return (\r\n            <>\r\n            <div className=\"row\">\r\n                {this.renderList()}\r\n                <DeleteNoteModal />\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <Paginator />\r\n                </div>\r\n            </div>\r\n            </>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { \r\n        notes: Object.values(state.notes.objects).sort((a,b)=>{\r\n            const dateA = new Date(a.created);\r\n            const dateB = new Date(b.created);\r\n            return dateB - dateA;\r\n        }), \r\n        loading: state.loading, \r\n        page:state.notes.page \r\n    };\r\n}\r\nexport default connect(mapStateToProps, { fetchNotes, selectNote, changePage, showDeleteModal })(NotesHome);","import React from 'react';\r\nimport { connect }from 'react-redux';\r\nimport { clearMessage } from '../actions';\r\n\r\nconst colors = {\r\n    info: 'info',\r\n    success: 'success',\r\n    error: 'danger'\r\n}\r\n\r\nconst MessageBar = ({ message, clearMessage }) => {\r\n    if (message) {\r\n        return (\r\n            <div className={`alert alert-${colors[message.type]} alert-dismissible`}>\r\n                <button onClick={clearMessage} className=\"close\">&times;</button>\r\n                {message.message}\r\n            </div>\r\n        );\r\n    }\r\n    return null;\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        message: state.message \r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, { clearMessage })(MessageBar);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport LoadnigSpinner from '../LoadingSpinner';\r\nimport { fetchNote, markDone, selectNote, showDeleteModal, startEditNote } from '../../actions';\r\nimport DeleteNoteModal from './DeleteNoteModal';\r\n\r\nclass NoteDetail extends React.Component {\r\n    componentDidMount(){\r\n        const slug = this.props.history.location.pathname.substr(7);\r\n        if (!this.props.note) {\r\n            this.props.fetchNote(slug)\r\n            .then((res) => {\r\n                if (res) {\r\n                    this.props.selectNote(this.props.note.id);\r\n                } else {\r\n                    this.props.history.push('/');\r\n                } \r\n            });\r\n        }\r\n    }\r\n\r\n    onMarkDoneButtonClick = event => {\r\n        event.preventDefault();\r\n        this.props.markDone(this.props.note.slug, !this.props.note.done)\r\n        .then(() => this.props.selectNote(this.props.note.id));\r\n    }\r\n\r\n    onEditButtonClick = event => {\r\n        event.preventDefault();\r\n        this.props.startEditNote();\r\n        this.props.selectNote(this.props.note.id);\r\n        this.props.history.push(`/edit/${this.props.note.slug}`);\r\n    }\r\n\r\n    showDeleteNoteModal = () => {\r\n        this.props.showDeleteModal(\"/\");\r\n    }\r\n\r\n    renderDone({ done, important }) {\r\n        return (\r\n            <>\r\n                {done ? <i id=\"done-mark\" className=\"fas fa-check mr-3  text-success\"></i>:''}\r\n                {important ? <i className=\"fas fa-exclamation mr-3 text-warning\"></i>: ''}\r\n            </>\r\n        )\r\n    }\r\n    render(){\r\n        const { note } = this.props;\r\n        if (note) {\r\n            return (\r\n                <>\r\n                <div className=\"row\">\r\n                    <div className=\"col-10 mx-auto\">\r\n                        <div className={`row mb-3 border-${note.color? note.color:''}`} style={{ borderBottom:\"4px solid\"}}>\r\n                            <div className=\"col-md-9 col-12\">\r\n                                <h1 className=\"ml-3 mt-4 mb-3\">{ note.title }</h1>\r\n                            </div>\r\n                            <div className=\"col-12 col-md-3 text-right pr-5 mt-3\">\r\n                                <h2 className=\"mt-4 mb-3\">\r\n                                {this.renderDone(note)}\r\n                                </h2>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6\">\r\n                                <p className=\"ml-5 text-muted\"><b>Created:</b> { new Date(note.created).toLocaleString() }</p>\r\n                                <p className=\"ml-5 text-muted\"><b>Updated:</b> { new Date(note.updated).toLocaleString() }</p>\r\n\r\n                            </div>\r\n                            <div className=\"col-6 text-right\">\r\n                                <div className=\"btn-group-vertical\" role=\"group\" aria-label=\"Basic example\">\r\n                                    <button \r\n                                        onClick={this.onMarkDoneButtonClick} \r\n                                        className=\"btn btn-success mark-done\"\r\n                                    >\r\n                                        <i className=\"far fa-check-square\"></i> Done\r\n                                    </button>\r\n                                    <button \r\n                                        onClick={this.onEditButtonClick} \r\n                                        className=\"btn btn-info\"\r\n                                    >\r\n                                        <i className=\"far fa-edit\"> Update</i>\r\n                                    </button>\r\n                                    <button \r\n                                        onClick={this.showDeleteNoteModal} \r\n                                        className=\"btn btn-danger\"\r\n                                    >\r\n                                        <i className=\"fas fa-times\"></i> Delete\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                <p className=\"my-5\">{ note.body }</p>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n                <DeleteNoteModal />\r\n                </>\r\n            );\r\n        }\r\n        return <LoadnigSpinner/>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        note: state.selectedNote\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchNote, markDone, selectNote, showDeleteModal, startEditNote })(NoteDetail);","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { createNote, editNote, startEditNote, stopEditNote, fetchNote, selectNote } from '../../actions';\r\nimport { connect } from 'react-redux';\r\n\r\nclass NoteCreate extends React.Component {\r\n    componentDidMount() {\r\n        switch (this.props.history.location.pathname.slice(0,6)){\r\n            case '/edit/': {                \r\n                const slug = this.props.history.location.pathname.substr(6);\r\n                if (!this.props.note) {\r\n                    this.props.fetchNote(slug)\r\n                    .then((res) => {\r\n                        if (res) {\r\n                            this.props.selectNote(this.props.note.id);\r\n                            this.props.startEditNote();\r\n                        } else {\r\n                            this.props.history.push('/');\r\n                        }\r\n                    });\r\n                }\r\n                break;\r\n            }\r\n            case '/creat' : {\r\n                this.props.stopEditNote();\r\n                break;\r\n            }\r\n            default: {\r\n                this.props.stopEditNote();\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    colorOptions = [\r\n        ['primary',  'Blue'],\r\n        ['secondary', 'Grey'],\r\n        ['success',  'Green'],\r\n        ['danger',    'Red'],\r\n        ['warning',   'Yellow'],\r\n        ['info',      'Cyan'],\r\n        ['light',     'Lightgrey'],\r\n        ['dark',      'Black']\r\n    ]\r\n    renderError({ error, touched }) {\r\n        if (touched && error){\r\n            return <div className=\"invalid-feedback\">{error}</div>;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    renderTextInput = ({ input, label, meta }) => {\r\n        const validClassName = meta.error ? 'is-invalid' : 'is-valid';\r\n        \r\n        return (\r\n            <div className=\"form-group\" >\r\n                <label>{label}</label>\r\n                <input {...input} className={`form-control ${meta.touched ? validClassName : ''}`} autoComplete=\"off\" />\r\n                {this.renderError(meta)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderTextArea = ({input, label, meta}) => {\r\n        const validClassName = meta.error ? 'is-invalid' : 'is-valid';\r\n        \r\n        return (\r\n            <div className=\"form-group\">\r\n                <label>{label}</label>\r\n                <textarea {...input} className={`form-control ${meta.touched? validClassName: ''}`} style={{ height: \"290px\"}}/>\r\n                {this.renderError(meta)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderCheckBoxInput = ({ input, label }) => {\r\n        return (\r\n            <div className=\"form-group\">\r\n                <input {...input} checked={input.value} type=\"checkbox\" />\r\n                <label>&nbsp;{label}</label>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderColorSelector = ({ input, label }) => {\r\n        const renderedOptions = this.colorOptions.map((color) => {\r\n            return <option \r\n                    key={color[0]} \r\n                    value={color[0]} \r\n                    className={`bg-${color[0]}`}\r\n                    >\r\n                        {color[1]}\r\n                    </option>\r\n        })\r\n        return (\r\n            <div className=\"form-group\">\r\n                <label className=\"my-1 mr-2\">{label}</label>\r\n                <select {...input} className=\"custom-select my-1 mr-sm-2\" >\r\n                    <option>Choose color...</option>\r\n                    {renderedOptions}\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n    onSubmit = (formValues) => {\r\n        if (this.props.edit) {\r\n            this.props.editNote(this.props.note, formValues)\r\n            .then((res)=>{\r\n                if (res){\r\n                    this.props.history.push(\"/?page=1\");\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            this.props.createNote(formValues)\r\n            .then((res)=>{\r\n                if (res){\r\n                    this.props.history.push(\"/?page=1\");\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row mt-4\">\r\n                <div className=\"col-11 mx-auto\">\r\n                    <form onSubmit={this.props.handleSubmit(this.onSubmit)}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-9\">\r\n                                <Field name=\"title\" component={this.renderTextInput} label=\"Enter title:\" />\r\n                                <Field name=\"body\" component={this.renderTextArea} label=\"Enter note body:\" />\r\n                            </div>\r\n                            <div className=\"col-3 pt-4\">\r\n                                <Field name=\"important\" component={this.renderCheckBoxInput} label=\"Important\" />\r\n                                <Field name=\"done\" component={this.renderCheckBoxInput} label=\"Done\" />\r\n                                <Field name=\"color\" component={this.renderColorSelector} label=\"Color\" />\r\n                                <div className=\"row mt-5\">\r\n                                    <div className=\"col-8 mx-auto\">\r\n                                        <button type=\"submit\" className=\"btn btn-success btn-block my-4\">\r\n                                            {this.props.edit?'Edit':'Create'}\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </form>\r\n                </div>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n};\r\n\r\nconst validate = (values) => {\r\n    const errors = {};\r\n    if (!values.title) {\r\n        errors.title = 'You must enter a title'\r\n    }\r\n    if (!values.body) {\r\n        errors.body = \" You must enter a body\"\r\n    }\r\n    return errors;\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    var initialValues = {}\r\n    if (state.notes.edit){\r\n        initialValues = {\r\n            ...state.selectedNote\r\n        }\r\n    } \r\n\r\n    return { \r\n        edit: state.notes.edit,\r\n        note: state.selectedNote,\r\n        initialValues: initialValues,\r\n        enableReinitialize: true\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, \r\n    {\r\n        createNote, \r\n        editNote, \r\n        fetchNote, \r\n        startEditNote, \r\n        stopEditNote, \r\n        selectNote\r\n    }\r\n    )(reduxForm({\r\n    form: 'noteCreate',\r\n    validate: validate\r\n})(NoteCreate));\r\n","import './form.css';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { register, setError } from '../../actions';\r\nimport LoadingSpinner from '../LoadingSpinner';\r\n\r\nclass Register extends React.Component {\r\n    state = {\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    }\r\n    onChange = event => this.setState({ [event.target.name]: event.target.value })\r\n\r\n    onSubmit = async event => {\r\n        event.preventDefault();\r\n        if (this.state.password===this.state.password2){\r\n            const result = await this.props.register(\r\n                this.state.username,\r\n                this.state.email,\r\n                this.state.password\r\n            )\r\n            if (result) {\r\n                this.props.history.push(\"/\");\r\n            }\r\n        } else {\r\n            this.props.setError(\"Passwords didn't match\");\r\n        }\r\n    }\r\n    render() {\r\n        if (this.props.loading) {\r\n            return <LoadingSpinner />\r\n        }\r\n        return (\r\n            <div className=\"col-md-6 m-auto\">\r\n                <div className=\"card card-body mt-4\">\r\n                    <h2 className=\"text-center\">Register</h2>\r\n                    <form className=\"form\" onSubmit={this.onSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <label>Username</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"username\"\r\n                                onChange={this.onChange}\r\n                                value={this.state.username}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Email</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                name=\"email\"\r\n                                onChange={this.onChange}\r\n                                value={this.state.email}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                name=\"password\"\r\n                                onChange={this.onChange}\r\n                                value={this.state.password}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Confirm Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                name=\"password2\"\r\n                                onChange={this.onChange}\r\n                                value={this.state.password2}\r\n                            />\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn btn-success\">\r\n                            Register\r\n                        </button>\r\n                        <p className=\"mt-5 mb-3 text-muted\">\r\n                            Already have an account?&nbsp;\r\n                            <Link to=\"/auth/login\">Login</Link>\r\n                        </p>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ loading: state.loading });\r\n\r\nexport default connect(mapStateToProps, {register, setError})(Register);","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport LoadingSpinner from '../LoadingSpinner';\r\n\r\nconst AuthenticatedOnlyRoute = ({ component: Component, auth, ...rest }) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props => {\r\n                if (auth.isLoading){\r\n                    return <LoadingSpinner/>;\r\n                } else if (!auth.isAuthenticated){\r\n                    return <Redirect to=\"/auth/login\" />\r\n                }\r\n                return <Component {...props} />\r\n            }}\r\n        />\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => ({ auth:state.auth, loading: state.loading });\r\n\r\nexport default  connect(mapStateToProps)(AuthenticatedOnlyRoute);","import './App.css';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport Login from './auth/Login';\r\nimport Header from './Header';\r\nimport NotesHome from './notes/NotesHome';\r\nimport MessageBar from './MessageBar';\r\nimport NoteDetail from './notes/NoteDetail';\r\nimport NoteCreate from './notes/NoteCreate';\r\nimport Register from './auth/Register';\r\nimport AOR from './common/AuthenticatedOnlyRoute';\r\n\r\nimport { loadUser } from '../actions';\r\n\r\n\r\nclass App extends React.Component{\r\n    componentDidMount() {\r\n        this.props.loadUser();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <BrowserRouter>\r\n                <Header />\r\n                <MessageBar />\r\n                <div className=\"container\">\r\n                    <AOR path=\"/\" exact component={NotesHome} />\r\n                    <Route path=\"/auth/login\" exact component={Login} />\r\n                    <Route path=\"/auth/register\" exact component={Register} />\r\n                    <AOR path=\"/notes/\" component={NoteDetail} />\r\n                    <AOR path=\"/create\" component={NoteCreate} />\r\n                    <AOR path=\"/edit/\" component={NoteCreate} edit={true} />\r\n                </div>\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { loading:state.loading };\r\n}\r\n\r\nexport default connect(mapStateToProps, {loadUser})(App);","import _ from 'lodash';\r\nimport {\r\n    FETCH_NOTES,\r\n    FETCH_NOTE,\r\n    START_EDIT_NOTE,\r\n    STOP_EDIT_NOTE,\r\n    EDIT_NOTE,\r\n    DELETE_NOTE,\r\n    CHANGE_PAGE,\r\n    LOGOUT\r\n} from '../actions/types'\r\n\r\nconst initialState = {\r\n    objects:{}, \r\n    count: 0, \r\n    page:1,\r\n    edit: false\r\n}\r\n\r\nexport default (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case FETCH_NOTES: {\r\n            return {\r\n                ...state,\r\n                objects: _.mapKeys(action.payload.results, \"id\"),\r\n                count: action.payload.count\r\n            };\r\n        }\r\n        case FETCH_NOTE: {\r\n            return {\r\n                ...state,\r\n                objects: {...state.objects, [action.payload.id]:action.payload}\r\n            }\r\n        }\r\n        case START_EDIT_NOTE: {\r\n            return {\r\n                ...state,\r\n                edit: true\r\n            }\r\n        }\r\n        case STOP_EDIT_NOTE: {\r\n            return {\r\n                ...state,\r\n                edit: false\r\n            }\r\n        }\r\n        case EDIT_NOTE: {\r\n            return {\r\n                ...state,\r\n                objects: {...state.objects, [action.payload.id]: action.payload},\r\n                edit: false\r\n            }\r\n        }\r\n        case DELETE_NOTE: {\r\n            return {\r\n                ...state,\r\n                objects: _.omit(state.objects, action.payload)\r\n            }\r\n        }\r\n        case CHANGE_PAGE: {\r\n            return {\r\n                ...state,\r\n                page: action.payload\r\n            }\r\n        }\r\n        case LOGOUT: {\r\n            return initialState;\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}","import {\r\n    LOGIN,\r\n    LOGOUT,\r\n    LOADING_USER,\r\n    USER_LOADED,\r\n    AUTH_ERROR\r\n} from '../actions/types'\r\n\r\nconst initialState = {\r\n    user: null,\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: false,\r\n    isLoading: true\r\n}\r\nexport default (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case LOGIN: {\r\n            return {\r\n                user: action.payload.user,\r\n                token: action.payload.token,\r\n                isAuthenticated: true,\r\n                isLoading: false\r\n            }\r\n        }\r\n\r\n        case LOGOUT: {\r\n            localStorage.removeItem('token');\r\n            return {\r\n                isAuthenticated:false,\r\n                user: null,\r\n                token: null\r\n            };\r\n        }\r\n\r\n        case LOADING_USER: {\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            }\r\n        }\r\n\r\n        case USER_LOADED : {\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                user: action.payload,\r\n                isLoading: false\r\n            }\r\n        }\r\n\r\n        case AUTH_ERROR: {\r\n            localStorage.removeItem('token');\r\n            return {\r\n                isAuthenticated:false,\r\n                user: null,\r\n                token: null\r\n            };\r\n        }\r\n\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}","import {\r\n    SHOW_DELETE_MODAL,\r\n    HIDE_DELETE_MODAL\r\n} from '../actions/types'\r\n\r\n\r\nconst initialState = {\r\n    deleteModal: {\r\n        show: false,\r\n        redirectTo: null\r\n    }\r\n}\r\n\r\nexport default (state=initialState, action) => {\r\n    switch(action.type) {\r\n        case SHOW_DELETE_MODAL: {\r\n            return {\r\n                ...state,\r\n                deleteModal: {\r\n                    show: true,\r\n                    redirectTo: action.payload \r\n                }\r\n            };\r\n        }\r\n        case HIDE_DELETE_MODAL: {\r\n            return {\r\n                ...state,\r\n                deleteModal: {\r\n                    show: false,\r\n                    redirectTo: null\r\n                }\r\n            }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport notesReducer from './notesReducer';\r\nimport authReducer from './authReducer';\r\nimport messageReducer from './messageReducer';\r\nimport selectNoteReducer from './selectNoteReducer';\r\nimport loadingReducer from './loadingReducer';\r\nimport modalReducer from './modalReducer';\r\n\r\nexport default combineReducers({\r\n    notes: notesReducer,\r\n    selectedNote: selectNoteReducer,\r\n    auth: authReducer,\r\n    message: messageReducer,\r\n    form: formReducer,\r\n    loading: loadingReducer,\r\n    modals: modalReducer\r\n})","import {\r\n    SELECT_NOTE,\r\n    DESELECT_NOTE,\r\n    LOGOUT\r\n} from '../actions/types'\r\n\r\nexport default (state=null, action) => {\r\n    switch (action.type){\r\n        case SELECT_NOTE: {\r\n            return action.payload;\r\n        }\r\n        case DESELECT_NOTE: {\r\n            return null;\r\n        }\r\n        case LOGOUT: {\r\n            return null;\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n\r\n}","import {\r\n    ERROR_MESSAGE,\r\n    INFO_MESSAGE,\r\n    SUCCESS_MESSAGE,\r\n    CLEAR_MESSAGE\r\n} from '../actions/types'\r\n\r\nexport default (state=null, action) => {\r\n    switch (action.type){\r\n\r\n        case ERROR_MESSAGE: {\r\n            return {\r\n                type: 'error',\r\n                message: action.payload\r\n            };\r\n        }\r\n\r\n        case INFO_MESSAGE: {\r\n            return {\r\n                type: 'info',\r\n                message: action.payload\r\n            };\r\n        }\r\n\r\n        case SUCCESS_MESSAGE: {\r\n            return {\r\n                type: 'success',\r\n                message: action.payload\r\n            };\r\n        }\r\n\r\n        case CLEAR_MESSAGE: {\r\n            return null;\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    START_LOADING,\r\n    STOP_LOADING\r\n} from '../actions/types'\r\n\r\nexport default (state=false, action) => {\r\n    switch (action.type) {\r\n        case START_LOADING: {\r\n            return true;\r\n        }\r\n        case STOP_LOADING: {\r\n            return false;\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\nconst store = createStore(\r\n    reducers,\r\n    applyMiddleware(thunk)\r\n);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>,\r\n    document.querySelector('#root')\r\n);"],"sourceRoot":""}